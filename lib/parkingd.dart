///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class parkingzoneonlyDataPolygons {
/*
{
  "type": "MultiPolygon",
  "coordinates": [
    [
      [
        [
          38.614719198169496
        ]
      ]
    ]
  ]
}
*/

  String? type;
  List<List<List<List<double?>?>?>?>? coordinates;

  parkingzoneonlyDataPolygons({
    this.type,
    this.coordinates,
  });
  parkingzoneonlyDataPolygons.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    if (json['coordinates'] != null && (json['coordinates'] is List)) {
      final v = json['coordinates'];
      final arr0 = <List<List<List<double>>>>[];
      v.forEach((v) {
        final arr1 = <List<List<double>>>[];
        v.forEach((v) {
          final arr2 = <List<double>>[];
          v.forEach((v) {
            final arr3 = <double>[];
            v.forEach((v) {
              arr3.add(double.tryParse(v.toString() ?? '')!);
            });
            arr2.add(arr3);
          });
          arr1.add(arr2);
        });
        arr0.add(arr1);
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        final arr1 = [];
        v!.forEach((v) {
          final arr2 = [];
          v!.forEach((v) {
            final arr3 = [];
            v!.forEach((v) {
              arr3.add(v);
            });
            arr2.add(arr3);
          });
          arr1.add(arr2);
        });
        arr0.add(arr1);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class parkingzoneonlyData {
/*
{
  "polygons": {
    "type": "MultiPolygon",
    "coordinates": [
      [
        [
          [
            38.614719198169496
          ]
        ]
      ]
    ]
  },
  "_id": "6437ce456570ae3ef9860463",
  "createdAt": "2023-04-13T09:41:25.797Z",
  "updatedAt": "2023-04-13T09:41:25.797Z"
}
*/

  parkingzoneonlyDataPolygons? polygons;
  String? Id;
  String? createdAt;
  String? updatedAt;

  parkingzoneonlyData({
    this.polygons,
    this.Id,
    this.createdAt,
    this.updatedAt,
  });
  parkingzoneonlyData.fromJson(Map<String, dynamic> json) {
    polygons = (json['polygons'] != null && (json['polygons'] is Map)) ? parkingzoneonlyDataPolygons.fromJson(json['polygons']) : null;
    Id = json['_id']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (polygons != null) {
      data['polygons'] = polygons!.toJson();
    }
    data['_id'] = Id;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class parkingzoneonly {
/*
{
  "status": true,
  "message": "All zones.",
  "data": [
    {
      "polygons": {
        "type": "MultiPolygon",
        "coordinates": [
          [
            [
              [
                38.614719198169496
              ]
            ]
          ]
        ]
      },
      "_id": "6437ce456570ae3ef9860463",
      "createdAt": "2023-04-13T09:41:25.797Z",
      "updatedAt": "2023-04-13T09:41:25.797Z"
    }
  ]
}
*/

  bool? status;
  String? message;
  List<parkingzoneonlyData?>? data;

  parkingzoneonly({
    this.status,
    this.message,
    this.data,
  });
  parkingzoneonly.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    if (json['data'] != null && (json['data'] is List)) {
      final v = json['data'];
      final arr0 = <parkingzoneonlyData>[];
      v.forEach((v) {
        arr0.add(parkingzoneonlyData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
