///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class GetCarsCarsPosition {
/*
{
  "type": "Point",
  "coordinates": [
    -121.264717
  ]
}
*/

  String? type;
  List<double?>? coordinates;

  GetCarsCarsPosition({
    this.type,
    this.coordinates,
  });
  GetCarsCarsPosition.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class GetCarsCars {
/*
{
  "position": {
    "type": "Point",
    "coordinates": [
      -121.264717
    ]
  },
  "vehicle_license_plate": "",
  "vehicle_identification_number": "",
  "_id": "63f377e5d6cc2f883de290ce",
  "brand": "Toyota",
  "model": "Prius",
  "qnr": "6DB9853D00FFF005",
  "seatCapacity": 5,
  "color": "White",
  "carType": "fuel",
  "images": [
    "https://zammadl.s3.us-west-1.amazonaws.com/zammadl-2021_toyota_prius_prime_angularfront.jpg"
  ],
  "isDamaged": false,
  "status": "active",
  "bookingStatus": "idle",
  "isDeleted": false,
  "createdAt": "2023-02-20T13:38:45.912Z",
  "updatedAt": "2023-07-10T22:20:59.143Z",
  "category": "sedan",
  "fuelType": "fuel",
  "bluetooth_connection": "disconnected",
  "board_voltage": 13.89,
  "ignition": "off",
  "immobilizer": "locked",
  "mileage": 24183,
  "mileage_since_immobilizer_unlock": 3,
  "alarm_input": "off",
  "alarm_input_2": "off",
  "low_battery_level_alarm": false,
  "low_fuel_level_alarm": false,
  "relay_value": 0,
  "qrCodeImage": "https://www.hellotech.com/guide/wp-content/uploads/2020/05/HelloTech-qr-code.jpg",
  "central_lock": "locked",
  "central_lock_last_command": "locked",
  "speed": 0,
  "fuel_level": 91,
  "keyfob": "in"
}
*/

  GetCarsCarsPosition? position;
  String? vehicleLicensePlate;
  String? vehicleIdentificationNumber;
  String? Id;
  String? brand;
  String? model;
  String? qnr;
  int? seatCapacity;
  String? color;
  String? carType;
  List<String?>? images;
  bool? isDamaged;
  String? status;
  String? bookingStatus;
  bool? isDeleted;
  String? createdAt;
  String? updatedAt;
  String? category;
  String? fuelType;
  String? bluetoothConnection;
  double? boardVoltage;
  String? ignition;
  String? immobilizer;
  int? mileage;
  int? mileageSinceImmobilizerUnlock;
  String? alarmInput;
  String? alarmInput_2;
  bool? lowBatteryLevelAlarm;
  bool? lowFuelLevelAlarm;
  int? relayValue;
  String? qrCodeImage;
  String? centralLock;
  String? centralLockLastCommand;
  int? speed;
  int? fuelLevel;
  String? keyfob;

  GetCarsCars({
    this.position,
    this.vehicleLicensePlate,
    this.vehicleIdentificationNumber,
    this.Id,
    this.brand,
    this.model,
    this.qnr,
    this.seatCapacity,
    this.color,
    this.carType,
    this.images,
    this.isDamaged,
    this.status,
    this.bookingStatus,
    this.isDeleted,
    this.createdAt,
    this.updatedAt,
    this.category,
    this.fuelType,
    this.bluetoothConnection,
    this.boardVoltage,
    this.ignition,
    this.immobilizer,
    this.mileage,
    this.mileageSinceImmobilizerUnlock,
    this.alarmInput,
    this.alarmInput_2,
    this.lowBatteryLevelAlarm,
    this.lowFuelLevelAlarm,
    this.relayValue,
    this.qrCodeImage,
    this.centralLock,
    this.centralLockLastCommand,
    this.speed,
    this.fuelLevel,
    this.keyfob,
  });
  GetCarsCars.fromJson(Map<String, dynamic> json) {
    position = (json['position'] != null) ? GetCarsCarsPosition.fromJson(json['position']) : null;
    vehicleLicensePlate = json['vehicle_license_plate']?.toString();
    vehicleIdentificationNumber = json['vehicle_identification_number']?.toString();
    Id = json['_id']?.toString();
    brand = json['brand']?.toString();
    model = json['model']?.toString();
    qnr = json['qnr']?.toString();
    seatCapacity = json['seatCapacity']?.toInt();
    color = json['color']?.toString();
    carType = json['carType']?.toString();
    if (json['images'] != null) {
      final v = json['images'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      images = arr0;
    }
    isDamaged = json['isDamaged'];
    status = json['status']?.toString();
    bookingStatus = json['bookingStatus']?.toString();
    isDeleted = json['isDeleted'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    category = json['category']?.toString();
    fuelType = json['fuelType']?.toString();
    bluetoothConnection = json['bluetooth_connection']?.toString();
    boardVoltage = json['board_voltage']?.toDouble();
    ignition = json['ignition']?.toString();
    immobilizer = json['immobilizer']?.toString();
    mileage = json['mileage']?.toInt();
    mileageSinceImmobilizerUnlock = json['mileage_since_immobilizer_unlock']?.toInt();
    alarmInput = json['alarm_input']?.toString();
    alarmInput_2 = json['alarm_input_2']?.toString();
    lowBatteryLevelAlarm = json['low_battery_level_alarm'];
    lowFuelLevelAlarm = json['low_fuel_level_alarm'];
    relayValue = json['relay_value']?.toInt();
    qrCodeImage = json['qrCodeImage']?.toString();
    centralLock = json['central_lock']?.toString();
    centralLockLastCommand = json['central_lock_last_command']?.toString();
    speed = json['speed']?.toInt();
    fuelLevel = json['fuel_level']?.toInt();
    keyfob = json['keyfob']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (position != null) {
      data['position'] = position!.toJson();
    }
    data['vehicle_license_plate'] = vehicleLicensePlate;
    data['vehicle_identification_number'] = vehicleIdentificationNumber;
    data['_id'] = Id;
    data['brand'] = brand;
    data['model'] = model;
    data['qnr'] = qnr;
    data['seatCapacity'] = seatCapacity;
    data['color'] = color;
    data['carType'] = carType;
    if (images != null) {
      final v = images;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['images'] = arr0;
    }
    data['isDamaged'] = isDamaged;
    data['status'] = status;
    data['bookingStatus'] = bookingStatus;
    data['isDeleted'] = isDeleted;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['category'] = category;
    data['fuelType'] = fuelType;
    data['bluetooth_connection'] = bluetoothConnection;
    data['board_voltage'] = boardVoltage;
    data['ignition'] = ignition;
    data['immobilizer'] = immobilizer;
    data['mileage'] = mileage;
    data['mileage_since_immobilizer_unlock'] = mileageSinceImmobilizerUnlock;
    data['alarm_input'] = alarmInput;
    data['alarm_input_2'] = alarmInput_2;
    data['low_battery_level_alarm'] = lowBatteryLevelAlarm;
    data['low_fuel_level_alarm'] = lowFuelLevelAlarm;
    data['relay_value'] = relayValue;
    data['qrCodeImage'] = qrCodeImage;
    data['central_lock'] = centralLock;
    data['central_lock_last_command'] = centralLockLastCommand;
    data['speed'] = speed;
    data['fuel_level'] = fuelLevel;
    data['keyfob'] = keyfob;
    return data;
  }
}

class GetCars {
/*
{
  "status": true,
  "message": "Get all cars",
  "cars": [
    {
      "position": {
        "type": "Point",
        "coordinates": [
          -121.264717
        ]
      },
      "vehicle_license_plate": "",
      "vehicle_identification_number": "",
      "_id": "63f377e5d6cc2f883de290ce",
      "brand": "Toyota",
      "model": "Prius",
      "qnr": "6DB9853D00FFF005",
      "seatCapacity": 5,
      "color": "White",
      "carType": "fuel",
      "images": [
        "https://zammadl.s3.us-west-1.amazonaws.com/zammadl-2021_toyota_prius_prime_angularfront.jpg"
      ],
      "isDamaged": false,
      "status": "active",
      "bookingStatus": "idle",
      "isDeleted": false,
      "createdAt": "2023-02-20T13:38:45.912Z",
      "updatedAt": "2023-07-10T22:20:59.143Z",
      "category": "sedan",
      "fuelType": "fuel",
      "bluetooth_connection": "disconnected",
      "board_voltage": 13.89,
      "ignition": "off",
      "immobilizer": "locked",
      "mileage": 24183,
      "mileage_since_immobilizer_unlock": 3,
      "alarm_input": "off",
      "alarm_input_2": "off",
      "low_battery_level_alarm": false,
      "low_fuel_level_alarm": false,
      "relay_value": 0,
      "qrCodeImage": "https://www.hellotech.com/guide/wp-content/uploads/2020/05/HelloTech-qr-code.jpg",
      "central_lock": "locked",
      "central_lock_last_command": "locked",
      "speed": 0,
      "fuel_level": 91,
      "keyfob": "in"
    }
  ]
}
*/

  bool? status;
  String? message;
  List<GetCarsCars?>? cars;

  GetCars({
    this.status,
    this.message,
    this.cars,
  });
  GetCars.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    if (json['cars'] != null) {
      final v = json['cars'];
      final arr0 = <GetCarsCars>[];
      v.forEach((v) {
        arr0.add(GetCarsCars.fromJson(v));
      });
      cars = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (cars != null) {
      final v = cars;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['cars'] = arr0;
    }
    return data;
  }
}
