///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RideHistoryDataInspectionsCarImagesAfterRide {
/*
{
  "respectiveSide": "Front Hood",
  "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
  "_id": "63a41224058e23a2fafbfe6b"
}
*/

  String? respectiveSide;
  String? image;
  String? Id;

  RideHistoryDataInspectionsCarImagesAfterRide({
    this.respectiveSide,
    this.image,
    this.Id,
  });
  RideHistoryDataInspectionsCarImagesAfterRide.fromJson(Map<String, dynamic> json) {
    respectiveSide = json['respectiveSide']?.toString();
    image = json['image']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['respectiveSide'] = respectiveSide;
    data['image'] = image;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryDataInspectionsCarImagesBeforeRide {
/*
{
  "respectiveSide": "Front Hood",
  "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
  "_id": "63a31640838d8332a0ed7515"
}
*/

  String? respectiveSide;
  String? image;
  String? Id;

  RideHistoryDataInspectionsCarImagesBeforeRide({
    this.respectiveSide,
    this.image,
    this.Id,
  });
  RideHistoryDataInspectionsCarImagesBeforeRide.fromJson(Map<String, dynamic> json) {
    respectiveSide = json['respectiveSide']?.toString();
    image = json['image']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['respectiveSide'] = respectiveSide;
    data['image'] = image;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryDataInspections {
/*
{
  "_id": "63a31640838d8332a0ed7514",
  "booking": "63a2e79b33e4a03b10a8a279",
  "carImagesBeforeRide": [
    {
      "respectiveSide": "Front Hood",
      "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
      "_id": "63a31640838d8332a0ed7515"
    }
  ],
  "carImagesAfterRide": [
    {
      "respectiveSide": "Front Hood",
      "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
      "_id": "63a41224058e23a2fafbfe6b"
    }
  ],
  "createdAt": "2022-12-21T14:20:48.262Z",
  "updatedAt": "2022-12-22T08:15:32.060Z"
}
*/

  String? Id;
  String? booking;
  List<RideHistoryDataInspectionsCarImagesBeforeRide?>? carImagesBeforeRide;
  List<RideHistoryDataInspectionsCarImagesAfterRide?>? carImagesAfterRide;
  String? createdAt;
  String? updatedAt;

  RideHistoryDataInspections({
    this.Id,
    this.booking,
    this.carImagesBeforeRide,
    this.carImagesAfterRide,
    this.createdAt,
    this.updatedAt,
  });
  RideHistoryDataInspections.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    booking = json['booking']?.toString();
    if (json['carImagesBeforeRide'] != null) {
      final v = json['carImagesBeforeRide'];
      final arr0 = <RideHistoryDataInspectionsCarImagesBeforeRide>[];
      v.forEach((v) {
        arr0.add(RideHistoryDataInspectionsCarImagesBeforeRide.fromJson(v));
      });
      carImagesBeforeRide = arr0;
    }
    if (json['carImagesAfterRide'] != null) {
      final v = json['carImagesAfterRide'];
      final arr0 = <RideHistoryDataInspectionsCarImagesAfterRide>[];
      v.forEach((v) {
        arr0.add(RideHistoryDataInspectionsCarImagesAfterRide.fromJson(v));
      });
      carImagesAfterRide = arr0;
    }
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['booking'] = booking;
    if (carImagesBeforeRide != null) {
      final v = carImagesBeforeRide;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['carImagesBeforeRide'] = arr0;
    }
    if (carImagesAfterRide != null) {
      final v = carImagesAfterRide;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['carImagesAfterRide'] = arr0;
    }
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class RideHistoryDataCar {
/*
{
  "_id": "637b37064bab010aa878e348",
  "brand": "mercedes1",
  "model": "Model XYZ",
  "seatCapacity": 4,
  "color": "black",
  "carType": "electrical",
  "category": "suv",
  "createdAt": "2022-11-21T08:29:58.881Z",
  "updatedAt": "2022-12-05T09:53:25.872Z",
  "images": [
    "https://i.pinimg.com/550x/42/64/14/426414c97264657bebb33d11a0205c04.jpg"
  ],
  "isDamaged": true
}
*/

  String? Id;
  String? brand;
  String? model;
  int? seatCapacity;
  String? color;
  String? carType;
  String? category;
  String? createdAt;
  String? updatedAt;
  List<String?>? images;
  bool? isDamaged;

  RideHistoryDataCar({
    this.Id,
    this.brand,
    this.model,
    this.seatCapacity,
    this.color,
    this.carType,
    this.category,
    this.createdAt,
    this.updatedAt,
    this.images,
    this.isDamaged,
  });
  RideHistoryDataCar.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    brand = json['brand']?.toString();
    model = json['model']?.toString();
    seatCapacity = json['seatCapacity']?.toInt();
    color = json['color']?.toString();
    carType = json['carType']?.toString();
    category = json['category']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['images'] != null) {
      final v = json['images'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      images = arr0;
    }
    isDamaged = json['isDamaged'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['brand'] = brand;
    data['model'] = model;
    data['seatCapacity'] = seatCapacity;
    data['color'] = color;
    data['carType'] = carType;
    data['category'] = category;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (images != null) {
      final v = images;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['images'] = arr0;
    }
    data['isDamaged'] = isDamaged;
    return data;
  }
}

class RideHistoryDataUserInsurance {
/*
{
  "insuranceNumber": "",
  "validTill": ""
}
*/

  String? insuranceNumber;
  String? validTill;

  RideHistoryDataUserInsurance({
    this.insuranceNumber,
    this.validTill,
  });
  RideHistoryDataUserInsurance.fromJson(Map<String, dynamic> json) {
    insuranceNumber = json['insuranceNumber']?.toString();
    validTill = json['validTill']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['insuranceNumber'] = insuranceNumber;
    data['validTill'] = validTill;
    return data;
  }
}

class RideHistoryDataUserDl {
/*
{
  "licenceNumber": "ABC",
  "validTill": "123",
  "image": "https://www.shutterstock.com/image-vector/driver-license-male-photo-identification-260nw-1227173818.jpg"
}
*/

  String? licenceNumber;
  String? validTill;
  String? image;

  RideHistoryDataUserDl({
    this.licenceNumber,
    this.validTill,
    this.image,
  });
  RideHistoryDataUserDl.fromJson(Map<String, dynamic> json) {
    licenceNumber = json['licenceNumber']?.toString();
    validTill = json['validTill']?.toString();
    image = json['image']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['licenceNumber'] = licenceNumber;
    data['validTill'] = validTill;
    data['image'] = image;
    return data;
  }
}

class RideHistoryDataUser {
/*
{
  "dl": {
    "licenceNumber": "ABC",
    "validTill": "123",
    "image": "https://www.shutterstock.com/image-vector/driver-license-male-photo-identification-260nw-1227173818.jpg"
  },
  "insurance": {
    "insuranceNumber": "",
    "validTill": ""
  },
  "totalTravelKm": 0,
  "_id": "637b3573e25e4f6d1227a1de",
  "name": "XYZ1234444",
  "phone": "+913454567",
  "email": "mt44123@gmail.com",
  "image": "https://media.sproutsocial.com/uploads/2022/06/profile-picture.jpeg",
  "role": "admin",
  "firebaseUid": "spyj4Z35FYVJs749IqM1oxqdcJC2",
  "firebaseSignInProvider": "custom",
  "gender": "male",
  "address": "",
  "suspensionReason": "Driving outside zone.",
  "isSuspended": true,
  "noOfRides": 0,
  "isDeleted": false,
  "createdAt": "2022-11-21T08:23:15.915Z",
  "updatedAt": "2022-12-16T15:07:12.755Z",
  "dob": "1999-05-03T00:00:00.000Z",
  "suspensionDate": "2022-12-05T17:39:11.000Z",
  "isApproved": false
}
*/

  RideHistoryDataUserDl? dl;
  RideHistoryDataUserInsurance? insurance;
  int? totalTravelKm;
  String? Id;
  String? name;
  String? phone;
  String? email;
  String? image;
  String? role;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? gender;
  String? address;
  String? suspensionReason;
  bool? isSuspended;
  int? noOfRides;
  bool? isDeleted;
  String? createdAt;
  String? updatedAt;
  String? dob;
  String? suspensionDate;
  bool? isApproved;

  RideHistoryDataUser({
    this.dl,
    this.insurance,
    this.totalTravelKm,
    this.Id,
    this.name,
    this.phone,
    this.email,
    this.image,
    this.role,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.gender,
    this.address,
    this.suspensionReason,
    this.isSuspended,
    this.noOfRides,
    this.isDeleted,
    this.createdAt,
    this.updatedAt,
    this.dob,
    this.suspensionDate,
    this.isApproved,
  });
  RideHistoryDataUser.fromJson(Map<String, dynamic> json) {
    dl = (json['dl'] != null) ? RideHistoryDataUserDl.fromJson(json['dl']) : null;
    insurance = (json['insurance'] != null) ? RideHistoryDataUserInsurance.fromJson(json['insurance']) : null;
    totalTravelKm = json['totalTravelKm']?.toInt();
    Id = json['_id']?.toString();
    name = json['name']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    image = json['image']?.toString();
    role = json['role']?.toString();
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    gender = json['gender']?.toString();
    address = json['address']?.toString();
    suspensionReason = json['suspensionReason']?.toString();
    isSuspended = json['isSuspended'];
    noOfRides = json['noOfRides']?.toInt();
    isDeleted = json['isDeleted'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    dob = json['dob']?.toString();
    suspensionDate = json['suspensionDate']?.toString();
    isApproved = json['isApproved'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (dl != null) {
      data['dl'] = dl!.toJson();
    }
    if (insurance != null) {
      data['insurance'] = insurance!.toJson();
    }
    data['totalTravelKm'] = totalTravelKm;
    data['_id'] = Id;
    data['name'] = name;
    data['phone'] = phone;
    data['email'] = email;
    data['image'] = image;
    data['role'] = role;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['gender'] = gender;
    data['address'] = address;
    data['suspensionReason'] = suspensionReason;
    data['isSuspended'] = isSuspended;
    data['noOfRides'] = noOfRides;
    data['isDeleted'] = isDeleted;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['dob'] = dob;
    data['suspensionDate'] = suspensionDate;
    data['isApproved'] = isApproved;
    return data;
  }
}

class RideHistoryDataDropLocation {
/*
{
  "type": "Point",
  "coordinates": [
    80.9229409563887
  ],
  "address": "Lucknow"
}
*/

  String? type;
  List<double?>? coordinates;
  String? address;

  RideHistoryDataDropLocation({
    this.type,
    this.coordinates,
    this.address,
  });
  RideHistoryDataDropLocation.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    address = json['address']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['address'] = address;
    return data;
  }
}

class RideHistoryDataPickupLocation {
/*
{
  "type": "Point",
  "coordinates": [
    83.37816239552401
  ],
  "address": "Gorakhpur"
}
*/

  String? type;
  List<double?>? coordinates;
  String? address;

  RideHistoryDataPickupLocation({
    this.type,
    this.coordinates,
    this.address,
  });
  RideHistoryDataPickupLocation.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    address = json['address']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['address'] = address;
    return data;
  }
}

class RideHistoryData {
/*
{
  "pickupLocation": {
    "type": "Point",
    "coordinates": [
      83.37816239552401
    ],
    "address": "Gorakhpur"
  },
  "dropLocation": {
    "type": "Point",
    "coordinates": [
      80.9229409563887
    ],
    "address": "Lucknow"
  },
  "cancelledBy": "",
  "_id": "63a2e79b33e4a03b10a8a279",
  "user": {
    "dl": {
      "licenceNumber": "ABC",
      "validTill": "123",
      "image": "https://www.shutterstock.com/image-vector/driver-license-male-photo-identification-260nw-1227173818.jpg"
    },
    "insurance": {
      "insuranceNumber": "",
      "validTill": ""
    },
    "totalTravelKm": 0,
    "_id": "637b3573e25e4f6d1227a1de",
    "name": "XYZ1234444",
    "phone": "+913454567",
    "email": "mt44123@gmail.com",
    "image": "https://media.sproutsocial.com/uploads/2022/06/profile-picture.jpeg",
    "role": "admin",
    "firebaseUid": "spyj4Z35FYVJs749IqM1oxqdcJC2",
    "firebaseSignInProvider": "custom",
    "gender": "male",
    "address": "",
    "suspensionReason": "Driving outside zone.",
    "isSuspended": true,
    "noOfRides": 0,
    "isDeleted": false,
    "createdAt": "2022-11-21T08:23:15.915Z",
    "updatedAt": "2022-12-16T15:07:12.755Z",
    "dob": "1999-05-03T00:00:00.000Z",
    "suspensionDate": "2022-12-05T17:39:11.000Z",
    "isApproved": false
  },
  "car": {
    "_id": "637b37064bab010aa878e348",
    "brand": "mercedes1",
    "model": "Model XYZ",
    "seatCapacity": 4,
    "color": "black",
    "carType": "electrical",
    "category": "suv",
    "createdAt": "2022-11-21T08:29:58.881Z",
    "updatedAt": "2022-12-05T09:53:25.872Z",
    "images": [
      "https://i.pinimg.com/550x/42/64/14/426414c97264657bebb33d11a0205c04.jpg"
    ],
    "isDamaged": true
  },
  "status": "completed",
  "pickupTime": "2022-12-21T13:52:44.615Z",
  "dropTime": "2022-12-22T09:56:43.027Z",
  "cancelReason": "",
  "isPaymentSuccess": false,
  "paymentMethod": "",
  "isDeleted": false,
  "createdAt": "2022-12-21T11:01:47.874Z",
  "updatedAt": "2022-12-22T09:56:43.033Z",
  "rideEndedBy": "admin",
  "inspections": {
    "_id": "63a31640838d8332a0ed7514",
    "booking": "63a2e79b33e4a03b10a8a279",
    "carImagesBeforeRide": [
      {
        "respectiveSide": "Front Hood",
        "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
        "_id": "63a31640838d8332a0ed7515"
      }
    ],
    "carImagesAfterRide": [
      {
        "respectiveSide": "Front Hood",
        "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
        "_id": "63a41224058e23a2fafbfe6b"
      }
    ],
    "createdAt": "2022-12-21T14:20:48.262Z",
    "updatedAt": "2022-12-22T08:15:32.060Z"
  },
  "id": "63a2e79b33e4a03b10a8a279"
}
*/

  RideHistoryDataPickupLocation? pickupLocation;
  RideHistoryDataDropLocation? dropLocation;
  String? cancelledBy;
  String? Id;
  RideHistoryDataUser? user;
  RideHistoryDataCar? car;
  String? status;
  String? pickupTime;
  String? dropTime;
  String? cancelReason;
  bool? isPaymentSuccess;
  String? paymentMethod;
  bool? isDeleted;
  String? createdAt;
  String? updatedAt;
  String? rideEndedBy;
  RideHistoryDataInspections? inspections;
  String? id;

  RideHistoryData({
    this.pickupLocation,
    this.dropLocation,
    this.cancelledBy,
    this.Id,
    this.user,
    this.car,
    this.status,
    this.pickupTime,
    this.dropTime,
    this.cancelReason,
    this.isPaymentSuccess,
    this.paymentMethod,
    this.isDeleted,
    this.createdAt,
    this.updatedAt,
    this.rideEndedBy,
    this.inspections,
    this.id,
  });
  RideHistoryData.fromJson(Map<String, dynamic> json) {
    pickupLocation = (json['pickupLocation'] != null) ? RideHistoryDataPickupLocation.fromJson(json['pickupLocation']) : null;
    dropLocation = (json['dropLocation'] != null) ? RideHistoryDataDropLocation.fromJson(json['dropLocation']) : null;
    cancelledBy = json['cancelledBy']?.toString();
    Id = json['_id']?.toString();
    user = (json['user'] != null) ? RideHistoryDataUser.fromJson(json['user']) : null;
    car = (json['car'] != null) ? RideHistoryDataCar.fromJson(json['car']) : null;
    status = json['status']?.toString();
    pickupTime = json['pickupTime']?.toString();
    dropTime = json['dropTime']?.toString();
    cancelReason = json['cancelReason']?.toString();
    isPaymentSuccess = json['isPaymentSuccess'];
    paymentMethod = json['paymentMethod']?.toString();
    isDeleted = json['isDeleted'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    rideEndedBy = json['rideEndedBy']?.toString();
    inspections = (json['inspections'] != null) ? RideHistoryDataInspections.fromJson(json['inspections']) : null;
    id = json['id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (pickupLocation != null) {
      data['pickupLocation'] = pickupLocation!.toJson();
    }
    if (dropLocation != null) {
      data['dropLocation'] = dropLocation!.toJson();
    }
    data['cancelledBy'] = cancelledBy;
    data['_id'] = Id;
    if (user != null) {
      data['user'] = user!.toJson();
    }
    if (car != null) {
      data['car'] = car!.toJson();
    }
    data['status'] = status;
    data['pickupTime'] = pickupTime;
    data['dropTime'] = dropTime;
    data['cancelReason'] = cancelReason;
    data['isPaymentSuccess'] = isPaymentSuccess;
    data['paymentMethod'] = paymentMethod;
    data['isDeleted'] = isDeleted;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['rideEndedBy'] = rideEndedBy;
    if (inspections != null) {
      data['inspections'] = inspections!.toJson();
    }
    data['id'] = id;
    return data;
  }
}

class RideHistory {
/*
{
  "status": true,
  "message": "All bookings Of a user .",
  "results": 1,
  "data": [
    {
      "pickupLocation": {
        "type": "Point",
        "coordinates": [
          83.37816239552401
        ],
        "address": "Gorakhpur"
      },
      "dropLocation": {
        "type": "Point",
        "coordinates": [
          80.9229409563887
        ],
        "address": "Lucknow"
      },
      "cancelledBy": "",
      "_id": "63a2e79b33e4a03b10a8a279",
      "user": {
        "dl": {
          "licenceNumber": "ABC",
          "validTill": "123",
          "image": "https://www.shutterstock.com/image-vector/driver-license-male-photo-identification-260nw-1227173818.jpg"
        },
        "insurance": {
          "insuranceNumber": "",
          "validTill": ""
        },
        "totalTravelKm": 0,
        "_id": "637b3573e25e4f6d1227a1de",
        "name": "XYZ1234444",
        "phone": "+913454567",
        "email": "mt44123@gmail.com",
        "image": "https://media.sproutsocial.com/uploads/2022/06/profile-picture.jpeg",
        "role": "admin",
        "firebaseUid": "spyj4Z35FYVJs749IqM1oxqdcJC2",
        "firebaseSignInProvider": "custom",
        "gender": "male",
        "address": "",
        "suspensionReason": "Driving outside zone.",
        "isSuspended": true,
        "noOfRides": 0,
        "isDeleted": false,
        "createdAt": "2022-11-21T08:23:15.915Z",
        "updatedAt": "2022-12-16T15:07:12.755Z",
        "dob": "1999-05-03T00:00:00.000Z",
        "suspensionDate": "2022-12-05T17:39:11.000Z",
        "isApproved": false
      },
      "car": {
        "_id": "637b37064bab010aa878e348",
        "brand": "mercedes1",
        "model": "Model XYZ",
        "seatCapacity": 4,
        "color": "black",
        "carType": "electrical",
        "category": "suv",
        "createdAt": "2022-11-21T08:29:58.881Z",
        "updatedAt": "2022-12-05T09:53:25.872Z",
        "images": [
          "https://i.pinimg.com/550x/42/64/14/426414c97264657bebb33d11a0205c04.jpg"
        ],
        "isDamaged": true
      },
      "status": "completed",
      "pickupTime": "2022-12-21T13:52:44.615Z",
      "dropTime": "2022-12-22T09:56:43.027Z",
      "cancelReason": "",
      "isPaymentSuccess": false,
      "paymentMethod": "",
      "isDeleted": false,
      "createdAt": "2022-12-21T11:01:47.874Z",
      "updatedAt": "2022-12-22T09:56:43.033Z",
      "rideEndedBy": "admin",
      "inspections": {
        "_id": "63a31640838d8332a0ed7514",
        "booking": "63a2e79b33e4a03b10a8a279",
        "carImagesBeforeRide": [
          {
            "respectiveSide": "Front Hood",
            "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
            "_id": "63a31640838d8332a0ed7515"
          }
        ],
        "carImagesAfterRide": [
          {
            "respectiveSide": "Front Hood",
            "image": "https://imgd.aeplcdn.com/370x208/n/cw/ec/54399/exterior-right-front-three-quarter-10.jpeg",
            "_id": "63a41224058e23a2fafbfe6b"
          }
        ],
        "createdAt": "2022-12-21T14:20:48.262Z",
        "updatedAt": "2022-12-22T08:15:32.060Z"
      },
      "id": "63a2e79b33e4a03b10a8a279"
    }
  ]
}
*/

  bool? status;
  String? message;
  int? results;
  List<RideHistoryData?>? data;

  RideHistory({
    this.status,
    this.message,
    this.results,
    this.data,
  });
  RideHistory.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    results = json['results']?.toInt();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <RideHistoryData>[];
      v.forEach((v) {
        arr0.add(RideHistoryData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    data['results'] = results;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
